// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartCourier.Models;

#nullable disable

namespace SmartCourier.Migrations
{
    [DbContext(typeof(CourierDbContext))]
    partial class CourierDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SmartCourier.Models.Bank", b =>
                {
                    b.Property<int>("bankId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("bankId"));

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("accountNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("branchName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("companyId")
                        .HasColumnType("int");

                    b.Property<string>("createBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("createDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("updateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("updateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("bankId");

                    b.HasIndex("companyId");

                    b.ToTable("Banks");
                });

            modelBuilder.Entity("SmartCourier.Models.Branch", b =>
                {
                    b.Property<int>("branchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("branchId"));

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("branchName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("createBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("createDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("staffId")
                        .HasColumnType("int");

                    b.Property<string>("updateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("updateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("branchId");

                    b.HasIndex("staffId");

                    b.ToTable("Branches");
                });

            modelBuilder.Entity("SmartCourier.Models.BranchStaff", b =>
                {
                    b.Property<int>("branchStaffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("branchStaffId"));

                    b.Property<string>("branchStaffName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("staffId")
                        .HasColumnType("int");

                    b.HasKey("branchStaffId");

                    b.HasIndex("staffId");

                    b.ToTable("BranchesStaffs");
                });

            modelBuilder.Entity("SmartCourier.Models.Company", b =>
                {
                    b.Property<int>("companyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("companyId"));

                    b.Property<string>("companyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("createBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("createDate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("companyId");

                    b.ToTable("Companys");
                });

            modelBuilder.Entity("SmartCourier.Models.Customer", b =>
                {
                    b.Property<int>("customerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("customerId"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("createBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customerEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customerMobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("updateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("updateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("customerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("SmartCourier.Models.DeliveryCharge", b =>
                {
                    b.Property<int>("deliveryChargeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("deliveryChargeId"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("createBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("parcelTypeId")
                        .HasColumnType("int");

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("updateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("updateDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("weight")
                        .HasColumnType("float");

                    b.HasKey("deliveryChargeId");

                    b.HasIndex("parcelTypeId");

                    b.ToTable("DeliveryCharges");
                });

            modelBuilder.Entity("SmartCourier.Models.Invoice", b =>
                {
                    b.Property<int>("invoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("invoiceId"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ParcelsID")
                        .HasColumnType("int");

                    b.Property<decimal>("amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("createBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("customerId")
                        .HasColumnType("int");

                    b.Property<string>("particular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("paymentModeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("paymentTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("updateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("updateDate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("invoiceId");

                    b.HasIndex("ParcelsID");

                    b.HasIndex("customerId");

                    b.HasIndex("paymentModeId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("SmartCourier.Models.Parcel", b =>
                {
                    b.Property<int>("ParcelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ParcelId"));

                    b.Property<int?>("BranchsbranchId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EstimatedReceiveTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<string>("ParcelCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReceiveTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReceiverBranchId")
                        .HasColumnType("int");

                    b.Property<int>("ReceiverCustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SendTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("SenderBranchId")
                        .HasColumnType("int");

                    b.Property<int>("SenderCustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("VanId")
                        .HasColumnType("int");

                    b.Property<int?>("companyId")
                        .HasColumnType("int");

                    b.Property<string>("createBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("deliveryChargeId")
                        .HasColumnType("int");

                    b.Property<int?>("driverId")
                        .HasColumnType("int");

                    b.Property<int?>("parcelTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("percelSendingDestribution")
                        .HasColumnType("bit");

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("recebingBranch")
                        .HasColumnType("bit");

                    b.Property<bool>("recebingDistributin")
                        .HasColumnType("bit");

                    b.Property<bool>("recebingReceber")
                        .HasColumnType("bit");

                    b.Property<bool>("sendingBranch")
                        .HasColumnType("bit");

                    b.Property<string>("updateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("weight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ParcelId");

                    b.HasIndex("BranchsbranchId");

                    b.HasIndex("VanId");

                    b.HasIndex("companyId");

                    b.HasIndex("deliveryChargeId");

                    b.HasIndex("parcelTypeId");

                    b.ToTable("Parsers");
                });

            modelBuilder.Entity("SmartCourier.Models.ParcelType", b =>
                {
                    b.Property<int>("parcelTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("parcelTypeId"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("createBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("createDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("parcelTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("updateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("updateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("parcelTypeId");

                    b.ToTable("ParsersTypes");
                });

            modelBuilder.Entity("SmartCourier.Models.PaymentMode", b =>
                {
                    b.Property<int>("paymentModeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("paymentModeId"));

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("createBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("createDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("paymentModeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("updateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("updateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("paymentModeId");

                    b.ToTable("paymentModes");
                });

            modelBuilder.Entity("SmartCourier.Models.Staff", b =>
                {
                    b.Property<int>("staffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("staffId"));

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("createBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("createDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("staffName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("updateBy")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("updateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("staffId");

                    b.ToTable("Staffs");
                });

            modelBuilder.Entity("SmartCourier.Models.Van", b =>
                {
                    b.Property<int>("vanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("vanId"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("createdDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("registrationNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("updateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("updateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("vanId");

                    b.ToTable("vans");
                });

            modelBuilder.Entity("SmartCourier.Models.Bank", b =>
                {
                    b.HasOne("SmartCourier.Models.Company", "Companys")
                        .WithMany("Banks")
                        .HasForeignKey("companyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Companys");
                });

            modelBuilder.Entity("SmartCourier.Models.Branch", b =>
                {
                    b.HasOne("SmartCourier.Models.Staff", null)
                        .WithMany("Branchs")
                        .HasForeignKey("staffId");
                });

            modelBuilder.Entity("SmartCourier.Models.BranchStaff", b =>
                {
                    b.HasOne("SmartCourier.Models.Staff", "Staffs")
                        .WithMany()
                        .HasForeignKey("staffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Staffs");
                });

            modelBuilder.Entity("SmartCourier.Models.DeliveryCharge", b =>
                {
                    b.HasOne("SmartCourier.Models.ParcelType", "ParcelTypes")
                        .WithMany()
                        .HasForeignKey("parcelTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ParcelTypes");
                });

            modelBuilder.Entity("SmartCourier.Models.Invoice", b =>
                {
                    b.HasOne("SmartCourier.Models.Parcel", "Parcels")
                        .WithMany("Invoices")
                        .HasForeignKey("ParcelsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartCourier.Models.Customer", "Customers")
                        .WithMany("Invoices")
                        .HasForeignKey("customerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartCourier.Models.PaymentMode", "PaymentModes")
                        .WithMany("Invoices")
                        .HasForeignKey("paymentModeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customers");

                    b.Navigation("Parcels");

                    b.Navigation("PaymentModes");
                });

            modelBuilder.Entity("SmartCourier.Models.Parcel", b =>
                {
                    b.HasOne("SmartCourier.Models.Branch", "Branchs")
                        .WithMany("Parcels")
                        .HasForeignKey("BranchsbranchId");

                    b.HasOne("SmartCourier.Models.Van", "Vans")
                        .WithMany("Parcels")
                        .HasForeignKey("VanId");

                    b.HasOne("SmartCourier.Models.Company", null)
                        .WithMany("Parcels")
                        .HasForeignKey("companyId");

                    b.HasOne("SmartCourier.Models.DeliveryCharge", "DeliveryCharges")
                        .WithMany("Parcels")
                        .HasForeignKey("deliveryChargeId");

                    b.HasOne("SmartCourier.Models.ParcelType", "ParcelTypes")
                        .WithMany("Parcels")
                        .HasForeignKey("parcelTypeId");

                    b.Navigation("Branchs");

                    b.Navigation("DeliveryCharges");

                    b.Navigation("ParcelTypes");

                    b.Navigation("Vans");
                });

            modelBuilder.Entity("SmartCourier.Models.Branch", b =>
                {
                    b.Navigation("Parcels");
                });

            modelBuilder.Entity("SmartCourier.Models.Company", b =>
                {
                    b.Navigation("Banks");

                    b.Navigation("Parcels");
                });

            modelBuilder.Entity("SmartCourier.Models.Customer", b =>
                {
                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("SmartCourier.Models.DeliveryCharge", b =>
                {
                    b.Navigation("Parcels");
                });

            modelBuilder.Entity("SmartCourier.Models.Parcel", b =>
                {
                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("SmartCourier.Models.ParcelType", b =>
                {
                    b.Navigation("Parcels");
                });

            modelBuilder.Entity("SmartCourier.Models.PaymentMode", b =>
                {
                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("SmartCourier.Models.Staff", b =>
                {
                    b.Navigation("Branchs");
                });

            modelBuilder.Entity("SmartCourier.Models.Van", b =>
                {
                    b.Navigation("Parcels");
                });
#pragma warning restore 612, 618
        }
    }
}
